AWSTemplateFormatVersion: "2010-09-09"
Description: Code pipeline
# ------------------------------------------------------------------------------
# Parameters
# ------------------------------------------------------------------------------
Parameters:
  ProjectName:
    Description: User-defined project name
    Type: String
    Default: ElasticStack
  BranchName:
    Description: branch name
    Type: String
    Default: develop
  CodeBuildName:
    Description: User-defined code build name
    Type: String
    Default: ElasticStack-build
  CodePipelineName:
    Description: User-defined code pipeline name
    Type: String
    Default: ElasticStack-pipeline

# ------------------------------------------------------------------------------
# Resources
# ------------------------------------------------------------------------------
Resources:
  DevPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref CodePipelineName
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: "{{resolve:ssm:GithubConnectionArn:1}}"
                FullRepositoryId: TomoyukiSugiyama/ElasticStack
                BranchName: !Ref BranchName
              RunOrder: 1
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: BuildAction
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildName
                EnvironmentVariables: '[{"name":"S3_BUCKET_CFN_NAME","value":"S3_BUCKET_CFN_NAME","type":"PARAMETER_STORE"},{"name":"S3_BUCKET_LAMBDA_NAME","value":"S3_BUCKET_LAMBDA_NAME","type":"PARAMETER_STORE"}]'
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
        - Name: Release
          Actions:
            - Name: ReleaseAction
              InputArtifacts:
                - Name: BuildArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Ref ProjectName
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                TemplatePath: BuildArtifact::artifact.yaml
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactS3Bucket
      RoleArn: !GetAtt CodePipelineRole.Arn
  ArtifactS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      LifecycleConfiguration:
        Rules:
          - Id: AutoDelete
            Status: Enabled
            ExpirationInDays: 14
          - Id: NoncurrentVersionExpiration
            Status: Enabled
            NoncurrentVersionExpirationInDays: 7
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
  ArtifactS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactS3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${ArtifactS3Bucket}/${CodePipelineName}/*"
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
          - Effect: Allow
            Action:
              - "s3:PutObject"
              - "s3:PutObjectAcl"
              - "s3:GetObject*"
            Resource:
              - !Sub "arn:aws:s3:::${ArtifactS3Bucket}/${CodePipelineName}/*"
            Principal:
              Service: codepipeline.amazonaws.com
          - Effect: Allow
            Action:
              - s3:GetBucketAcl
            Resource:
              - !Sub "arn:aws:s3:::${ArtifactS3Bucket}"
            Principal:
              Service: codepipeline.amazonaws.com
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Condition: {}
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: FIoTPipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource: "*"
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - cloudformation.amazonaws.com
              - Effect: Allow
                Action:
                  - "codestar-connections:UseConnection"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                  - "s3:GetObject*"
                Resource:
                  - !Sub "arn:aws:s3:::${ArtifactS3Bucket}/${CodePipelineName}/*"
              - Effect: Allow
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuildBatches"
                  - "codebuild:StartBuildBatch"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                Resource:
                  - "*"
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Condition: {}
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: CloudFormationPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:CreateInternetGateway"
                  - "ec2:CreateVpc"
                  - "ec2:ModifyVpcAttribute"
                  - "ec2:DescribeNetworkAcls"
                  - "ec2:DescribeVpcAttribute"
                  - "ec2:CreateRouteTable"
                  - "ec2:DescribeAvailabilityZones"
                  - "ec2:CreateSubnet"
                  - "ec2:ModifySubnetAttribute"
                  - "ec2:CreateRoute"
                  - "ec2:AssociateRouteTable"
                  - "ec2:DescribeFlowLogs"
                  - "ec2:CreateFlowLogs"
                  - "ec2:DescribeRouteTables"
                  - "ec2:CreateSecurityGroup"
                  - "ec2:AuthorizeSecurityGroupIngress"
                  - "ec2:RevokeSecurityGroupEgress"
                  - "ec2:AuthorizeSecurityGroupEgress"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DescribeAccountAttributes"
                  - "ec2:DescribeInternetGateways"
                  - "ec2:DescribeKeyPairs"
                  - "ec2:CreateVpcEndpoint"
                  - "ec2:RunInstances"
                  - "ec2:CreateTags"
                  - "ec2:DescribeInstances"
                  - "ec2:DescribeVpcEndpoints"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeVpcs"
                  - "ec2:DescribeSecurityGroups"
                  - "ec2:TerminateInstances"
                  - "ec2:DeleteVpcEndpoints"
                  - "ec2:RevokeSecurityGroupIngress"
                  - "ec2:RevokeSecurityGroupEgress"
                  - "ec2:DeleteSecurityGroup"
                  - "ec2:DetachInternetGateway"
                  - "ec2:DeleteRoute"
                  - "ec2:DeleteFlowLogs"
                  - "ec2:DisassociateRouteTable"
                  - "ec2:DeleteInternetGateway"
                  - "ec2:DeleteSubnet"
                  - "ec2:DeleteRouteTable"
                  - "ec2:DeleteVpc"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "s3:CreateBucket"
                  - "s3:PutBucketLifecycle"
                  - "s3:PutBucketEncryption"
                  - "s3:PutBucketVersioning"
                  - "s3:PutBucketPublicAccessBlock"
                  - "s3:GetBucketPolicy"
                  - "s3:PutBucketPolicy"
                  - "s3:DeleteBucketPolicy"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "elasticloadbalancing:CreateLoadBalancer"
                  - "elasticloadbalancing:DescribeLoadBalancers"
                  - "elasticloadbalancing:ModifyLoadBalancerAttributes"
                  - "elasticloadbalancing:CreateTargetGroup"
                  - "elasticloadbalancing:RegisterTargets"
                  - "elasticloadbalancing:DescribeTargetGroups"
                  - "elasticloadbalancing:DescribeTargetHealth"
                  - "elasticloadbalancing:CreateListener"
                  - "elasticloadbalancing:DescribeListeners"
                  - "elasticloadbalancing:AddTags"
                  - "elasticloadbalancing:DeleteListener"
                  - "elasticloadbalancing:DeleteTargetGroup"
                  - "elasticloadbalancing:DeleteLoadBalancer"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "es:CreateDomain"
                  - "es:AddTags"
                  - "es:ListTags"
                  - "es:DescribeDomain"
                  - "es:DeleteDomain"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "ecs:CreateCluster"
                  - "ecs:RegisterTaskDefinition"
                  - "ecs:CreateService"
                  - "ecs:UpdateService"
                  - "ecs:DescribeServices"
                  - "ecs:DescribeClusters"
                  - "ecs:DeleteCluster"
                  - "ecs:DeregisterTaskDefinition"
                  - "ecs:DeleteService"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "servicediscovery:CreatePrivateDnsNamespace"
                  - "servicediscovery:GetOperation"
                  - "servicediscovery:GetService"
                  - "servicediscovery:CreateService"
                  - "servicediscovery:DeleteService"
                  - "servicediscovery:DeleteNamespace"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "autoscaling:DescribeScalableTargets"
                  - "autoscaling:RegisterScalableTarget"
                  - "autoscaling:DescribeScalingPolicies"
                  - "autoscaling:PutScalingPolicy"
                  - "autoscaling:DeleteScalingPolicy"
                  - "autoscaling:DeregisterScalableTarget"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "lambda:PutFunctionConcurrency20171031"
                  - "lambda:CreateFunction20150331"
                  - "lambda:GetFunction20150331v2"
                  - "lambda:GetFunctionCodeSigningConfig"
                  - "lambda:AddPermission20150331v2"
                  - "lambda:RemovePermission20150331v2"
                  - "lambda:DeleteFunction20150331"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "ssm:GetParameters"
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/GuardDutySlackChannelId"
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/GuardDutySlackWorkspaceId"
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/S3BacketCfn"
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/S3BacketLambda"
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/S3PrefixListId"
              - Effect: Allow
                Action:
                  - "sns:CreateTopic"
                  - "sns:GetTopicAttributes"
                  - "sns:Subscribe"
                  - "sns:Unsubscribe"
                  - "sns:DeleteTopic"
                Resource:
                  - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:*"
              - Effect: Allow
                Action:
                  - "guardduty:GetDetector"
                  - "guardduty:CreateDetector"
                  - "guardduty:DeleteDetector"
                  - "guardduty:ListDetectors"
                Resource:
                  - !Sub "arn:aws:guardduty:${AWS::Region}:${AWS::AccountId}:detector/*"
              - Effect: Allow
                Action:
                  - "logs:PutRetentionPolicy"
                  - "logs:CreateLogGroup"
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
              - Effect: Allow
                Action:
                  - "events:PutRule"
                  - "events:PutTargets"
                  - "events:DescribeRule"
                  - "events:RemoveTargets"
                  - "events:DeleteRule"
                Resource:
                  - !Sub "arn:aws:events:${AWS::Region}:*:*"
