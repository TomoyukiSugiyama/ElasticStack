AWSTemplateFormatVersion: "2010-09-09"
Description: Network
# ------------------------------------------------------------------------------
# Parameters
# ------------------------------------------------------------------------------
Parameters:
  VpcCidrBlock:
    Type: String
    Default: 172.31.0.0/16

# ------------------------------------------------------------------------------
# Resources
# ------------------------------------------------------------------------------
Resources:
  # VPC
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: f-iot.service.name
          Value: vpc
  # Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: f-iot.service.name
          Value: InternetGateway
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc
  # Subnet
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select
        - 0
        - Fn::Cidr: [!GetAtt Vpc.CidrBlock, 6, 12]
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: f-iot.service.name
          Value: private-subnet-1
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select
        - 1
        - Fn::Cidr: [!GetAtt Vpc.CidrBlock, 6, 12]
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: f-iot.service.name
          Value: private-subnet-2
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select
        - 2
        - Fn::Cidr: [!GetAtt Vpc.CidrBlock, 6, 12]
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref AWS::Region
      Tags:
        - Key: f-iot.service.name
          Value: private-subnet-3
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select
        - 3
        - Fn::Cidr: [!GetAtt Vpc.CidrBlock, 6, 12]
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: True
      Tags:
        - Key: f-iot.service.name
          Value: public-subnet-1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select
        - 4
        - Fn::Cidr: [!GetAtt Vpc.CidrBlock, 6, 12]
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: True
      Tags:
        - Key: f-iot.service.name
          Value: public-subnet-2
  # RoutTable
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: f-iot.service.name
          Value: private-route-table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: f-iot.service.name
          Value: public-route-table
  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  # SubnetRoutTableAssociation
  PrivateSubnet1RootTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnet2RootTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnet3RootTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet3
      RouteTableId: !Ref PrivateRouteTable
  PublicSubnet1RootTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  # VpcFlowLog
  VpcFlowLog:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !GetAtt VpcFlowLogRole.Arn
      LogDestinationType: cloud-watch-logs
      LogGroupName: !Ref VpcFlowLogGroup
      ResourceId: !Ref Vpc
      ResourceType: VPC
      TrafficType: ALL
  VpcFlowLogRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Condition: {}
            Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: VpcFlowLogAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                Resource: !GetAtt VpcFlowLogGroup.Arn
      Tags:
        - Key: f-iot.service.name
          Value: vpc-flow-log-role
    Type: AWS::IAM::Role
  VpcFlowLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      KmsKeyId: !GetAtt VpcFlowLogKey.Arn
      RetentionInDays: 7
  VpcFlowLogKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: symmetric KMS key
      EnableKeyRotation: true
      PendingWindowInDays: 7
      KeyPolicy:
        Version: 2012-10-17
        Id: key-flow-log-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
  KeyAlias:
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Type: "AWS::KMS::Alias"
    Properties:
      AliasName: "alias/vpc-flow-log"
      TargetKeyId: !Ref VpcFlowLogKey

# ------------------------------------------------------------------------------
# Outputs
# ------------------------------------------------------------------------------
Outputs:
  VpcId:
    Value: !Ref Vpc
  PrivateSubnetIds:
    Value:
      !Join [
        ",",
        [!Ref PrivateSubnet1, !Ref PrivateSubnet2, !Ref PrivateSubnet3],
      ]
  PublicSubnet1Id:
    Value: !Ref PublicSubnet1
  PublicSubnet2Id:
    Value: !Ref PublicSubnet2
  PrivateRouteTableId:
    Value: !Ref PrivateRouteTable
