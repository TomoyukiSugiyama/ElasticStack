AWSTemplateFormatVersion: "2010-09-09"
Description: Logstash Fargate
# ------------------------------------------------------------------------------
# Parameters
# ------------------------------------------------------------------------------
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  SubnetIds:
    Type: String
  SecurityGroupId:
    Type: String
  LbTargetGroupId:
    Type: String
  ContainerName:
    Type: String
    Default: logstash
  ContainerPort:
    Type: Number
    Default: 5044

# ------------------------------------------------------------------------------
# Resources
# ------------------------------------------------------------------------------
Resources:
  CloudMap:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Description: Service Map for Docker Compose project ecs
      Name: ecs.local
      Vpc: !Ref VpcId
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: ecs
      Tags:
        - Key: f-iot.service.name
          Value: ecs-cluster
  LogstashService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !GetAtt Cluster.Arn
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DeploymentController:
        Type: ECS
      DesiredCount: 2
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: !Ref ContainerName
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref LbTargetGroupId
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref SecurityGroupId
          Subnets: !Split [",", !Ref SubnetIds]
      PlatformVersion: 1.4.0
      PropagateTags: SERVICE
      SchedulingStrategy: REPLICA
      ServiceRegistries:
        - RegistryArn: !GetAtt LogstashServiceDiscoveryEntry.Arn
      Tags:
        - Key: f-iot.service.name
          Value: logstash-serrvice
      TaskDefinition: !Ref LogstashTaskDefinition
  LogstashServiceDiscoveryEntry:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Description: '"logstash" service discovery entry in Cloud Map'
      DnsConfig:
        DnsRecords:
          - TTL: 60
            Type: A
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: logstash
      NamespaceId: !Ref CloudMap
  LogstashTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command:
            - !Sub "${AWS::Region}.compute.internal"
            - ecs.local
          Essential: false
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/f-iot-rep:ecs-searchdomain-sidecar"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Name: Logstash_ResolvConf_InitContainer
        - DependsOn:
            - Condition: SUCCESS
              ContainerName: Logstash_ResolvConf_InitContainer
          Essential: true
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/f-iot-rep:logstash"
          LinuxParameters: {}
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Name: logstash
          PortMappings:
            - ContainerPort: !Ref ContainerPort
      Cpu: "2048"
      ExecutionRoleArn: !GetAtt LogstashTaskExecutionRole.Arn
      Family: ecs-logstash
      Memory: "4096"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
  LogstashTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Condition: {}
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      Tags:
        - Key: f-iot.service.name
          Value: logstash-task-execution-role
  LogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      KmsKeyId: !GetAtt FargateLogKey.Arn
      RetentionInDays: 7
  FargateLogKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: symmetric KMS key
      EnableKeyRotation: true
      PendingWindowInDays: 20
      KeyPolicy:
        Version: 2012-10-17
        Id: key-fargate-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:user/tomoyuki"
            Action: "kms:*"
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
