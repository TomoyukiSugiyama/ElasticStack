AWSTemplateFormatVersion: "2010-09-09"
Description: OpenSearchServiceDomain resource
# ------------------------------------------------------------------------------
# Parameters
# ------------------------------------------------------------------------------
Parameters:
  DomainName:
    Description: User-defined OpenSearch domain name
    Type: String
    Default: my-es
  EngineVersion:
    Description: User-defined OpenSearch version
    Type: String
    Default: OpenSearch_1.0
  InstanceType:
    Type: String
    Default: m3.medium.search
  GroupDescription:
    Type: String
    Default: my-securitygroup
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    Default: elastic-stack

# ------------------------------------------------------------------------------
# Resources
# ------------------------------------------------------------------------------
Resources:
  # OpenSearchServiceDomain
  OpenSearchServiceDomain:
    Type: AWS::OpenSearchService::Domain
    Properties:
      DomainName:
        Ref: DomainName
      EngineVersion:
        Ref: EngineVersion
      ClusterConfig:
        InstanceCount: 1
        InstanceType:
          Ref: InstanceType
      EBSOptions:
        EBSEnabled: true
        Iops: 0
        VolumeSize: 10
        VolumeType: standard
      AccessPolicies:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: "*"
            Action: "es:*"
            Resource: "arn:aws:es:ap-northeast-1:645402554699:domain/my-es/*"
      AdvancedOptions:
        rest.action.multi.allow_explicit_index: true
        override_main_response_version: true
      Tags:
        - Key: Name
          Value: !Join [" ", [!Ref AWS::StackName, OpenSearch]]
      VPCOptions:
        SubnetIds:
          - Ref: PublicSubnet1
        SecurityGroupIds:
          - Ref: OpenSearchSecurityGroup
  # VPC
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.31.0.0/16
      Tags:
        - Key: Name
          Value: !Join [" ", [!Ref AWS::StackName, VPC]]
  # Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join [" ", [!Ref AWS::StackName, InternetGateway]]
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc
  # Subnet
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      CidrBlock: !Select
        - 0
        - Fn::Cidr: [!GetAtt Vpc.CidrBlock, 3, 12]
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: !Join [" ", [!Ref AWS::StackName, PublicSubnet1]]
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      CidrBlock: !Select
        - 1
        - Fn::Cidr: [!GetAtt Vpc.CidrBlock, 3, 12]
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: !Join [" ", [!Ref AWS::StackName, PublicSubnet2]]
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: Vpc
      CidrBlock: !Select
        - 2
        - Fn::Cidr: [!GetAtt Vpc.CidrBlock, 3, 12]
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: !Join [" ", [!Ref AWS::StackName, PublicSubnet3]]
  # RoutTable
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Join [" ", [!Ref AWS::StackName, RouteTable]]
  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  # SubnetRoutTableAssociation
  PublicSubnet1RootTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref RouteTable
  PublicSubnet2RootTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref RouteTable
  PublicSubnet3RootTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref RouteTable
  # SecurityGroup
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Join [" ", [!Ref AWS::StackName, SecurityGroup, EC2]]
  SecurityGroupHTTPinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: 0.0.0.0/0
  SecurityGroupSSHinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0
  OpenSearchSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Join [" ", [!Ref AWS::StackName, SecurityGroup, OpenSearch]]
  OpenSearchSecurityGroupHTTPinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref OpenSearchSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: !Select
        - 0
        - Fn::Cidr: [!GetAtt Vpc.CidrBlock, 3, 12]
  # EC2
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-085e9421f80dbe728
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !Ref PublicSubnet1
          GroupSet:
            - !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: !Join [" ", [!Ref AWS::StackName, EC2]]

# ------------------------------------------------------------------------------
# Outputs
# ------------------------------------------------------------------------------
Outputs:
  Arn:
    Value:
      "Fn::GetAtt":
        - OpenSearchServiceDomain
        - Arn
  DomainEndpoint:
    Value:
      "Fn::GetAtt":
        - OpenSearchServiceDomain
        - DomainEndpoint
  SecurityGroupId:
    Value:
      Ref: SecurityGroup
  PublicSubnet1Id:
    Value:
      Ref: PublicSubnet1
